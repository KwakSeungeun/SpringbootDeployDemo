steps:
#  프로젝트 build (*.jar 파일 생성)
  - id: 'build'
    name: 'gcr.io/cloud-builders/mvn'
    args: [
        'clean',
        'package',
        '-Dmaven.test.skip=true'
    ]

#    Docker image 생성 (Dockerfile 에 작성된 환경을 image)
#    Docker image name format : [Registry URL]/[사용자 ID]/[이미지명]:[tag]
  - id: 'docker build'
    name: 'gcr.io/cloud-builders/docker'
    args: [ 'build', '-t', 'gcr.io/$PROJECT_ID/mainservice:$SHORT_SHA', '.' ]

#    Docker image list
  - id: 'docker image list'
    name: 'gcr.io/cloud-builders/docker'
    args: [ 'images']

#    Docker registry 에 push
  - id: 'publish'
    name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/mainservice:$SHORT_SHA']

  - name: 'gcr.io/cloud-builders/gcloud'
    args: ['config', 'set', 'project', 'springboot-deploy-test']

  - id: 'cluster setting'
    name: 'gcr.io/cloud-builders/gcloud'
    args: ['container', 'clusters', 'get-credentials', 'uplus-poc-test']

#   Deploy to GKE
#  - id : 'deploy'
#    name: 'gcr.io/cloud-builders/gke-deploy'
#    args:
#      - 'run'
#      - '--expose=8080'
#      - '--image=gcr.io/$PROJECT_ID/$REPO_NAME:$SHORT_SHA'
#      - '--location=asia-northeast1-a'
#      - '--cluster=uplus-poc-test'
  - id : 'deploy'
    name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args: ['kubectl', 'create', 'deployment', 'hello-server', '--image=gcr.io/$PROJECT_ID/mainservice:$SHORT_SHA']


options:
  env:
    - CLOUDSDK_COMPUTE_ZONE = asia-northeast1-a
    - CLOUDSDK_CONTAINER_CLUSTER = uplus-poc-test
timeout: 1600s